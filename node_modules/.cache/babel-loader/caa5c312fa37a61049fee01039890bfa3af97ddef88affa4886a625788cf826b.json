{"ast":null,"code":"import _classCallCheck from\"/Users/nekoatsume/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nekoatsume/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;this._headers=config.headers;}_createClass(Api,[{key:\"_getResFromServer\",value:function _getResFromServer(){return function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));};}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'GET',headers:this._headers}).then(this._getResFromServer());}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{method:'GET',headers:this._headers}).then(this._getResFromServer());}},{key:\"updateUserInfo\",value:function updateUserInfo(name,job){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:\"\".concat(name),about:\"\".concat(job)})}).then(this._getResFromServer());}},{key:\"addNewCard\",value:function addNewCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:\"\".concat(data.popupName),link:\"\".concat(data.popupImg)})}).then(this._getResFromServer());}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._url,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._getResFromServer());}},{key:\"setCardLikes\",value:function setCardLikes(id,userData){return fetch(\"\".concat(this._url,\"/cards/\").concat(id,\"/likes\"),{method:'PUT',headers:this._headers,body:JSON.stringify(userData)}).then(this._getResFromServer());}},{key:\"deleteCardLike\",value:function deleteCardLike(id){return fetch(\"\".concat(this._url,\"/cards/\").concat(id,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._getResFromServer());}},{key:\"editAvatar\",value:function editAvatar(avatarUrl){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:\"\".concat(avatarUrl)})}).then(this._getResFromServer());}}]);return Api;}();var api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-52',headers:{'content-type':'application/json',authorization:'88b8691a-7ac8-4b43-af84-6572693f6425'}});export{api};","map":{"version":3,"names":["Api","config","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_getResFromServer","name","job","body","JSON","stringify","about","data","popupName","link","popupImg","id","userData","avatarUrl","avatar","api","authorization"],"sources":["/Users/nekoatsume/Desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    _getResFromServer() {\n        return (res) => {\n            if(res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n\n    getUserInfo () {\n        return fetch(`${this._url}/users/me`, {\n            method: 'GET',\n            headers: this._headers\n        })\n        .then(this._getResFromServer());\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: 'GET',\n            headers: this._headers\n        })\n        .then(this._getResFromServer());\n    }\n\n    updateUserInfo(name, job) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: `${name}`,\n                about: `${job}`\n            })\n        })\n        .then(this._getResFromServer());\n    }\n\n    addNewCard(data) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: `${data.popupName}`,\n                link: `${data.popupImg}`\n            })\n        })\n        .then(this._getResFromServer());\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._url}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._getResFromServer());\n    }\n\n    setCardLikes(id, userData) {\n        return fetch(`${this._url}/cards/${id}/likes`, {\n            method: 'PUT',\n            headers: this._headers,\n            body: JSON.stringify(userData)\n        })\n        .then(this._getResFromServer());\n    }\n\n    deleteCardLike(id) {\n        return fetch(`${this._url}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._getResFromServer());\n    }\n\n    editAvatar(avatarUrl) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: `${avatarUrl}`\n            }  \n            )\n        })\n        .then(this._getResFromServer());\n    }\n}\n\nconst api = new Api ({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-52',\n    headers: {\n        'content-type': 'application/json',\n        authorization: '88b8691a-7ac8-4b43-af84-6572693f6425'\n    }\n});\n\nexport {api};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}