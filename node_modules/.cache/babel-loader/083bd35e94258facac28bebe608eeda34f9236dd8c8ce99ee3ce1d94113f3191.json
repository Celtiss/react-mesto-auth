{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _getResFromServer() {\n    return res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    };\n  }\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._getResFromServer());\n  }\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._getResFromServer());\n  }\n  updateUserInfo(name, job) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: `${name}`,\n        about: `${job}`\n      })\n    }).then(this._getResFromServer());\n  }\n  addNewCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: `${data.popupName}`,\n        link: `${data.popupImg}`\n      })\n    }).then(this._getResFromServer());\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResFromServer());\n  }\n  setCardLikes(id) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._getResFromServer());\n  }\n  deleteCardLike(id) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResFromServer());\n  }\n  editAvatar(avatarUrl) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${avatarUrl}`\n      })\n    }).then(this._getResFromServer());\n  }\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-52',\n  headers: {\n    'content-type': 'application/json',\n    authorization: '88b8691a-7ac8-4b43-af84-6572693f6425'\n  }\n});\nexport { api };","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_getResFromServer","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","getInitialCards","updateUserInfo","name","job","body","JSON","stringify","about","addNewCard","data","popupName","link","popupImg","deleteCard","id","setCardLikes","deleteCardLike","editAvatar","avatarUrl","avatar","api","authorization"],"sources":["/Users/nekoatsume/Desktop/dev/mesto-react-12/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    _getResFromServer() {\n        return (res) => {\n            if(res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n\n    getUserInfo () {\n        return fetch(`${this._url}/users/me`, {\n            method: 'GET',\n            headers: this._headers\n        })\n        .then(this._getResFromServer());\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            method: 'GET',\n            headers: this._headers\n        })\n        .then(this._getResFromServer());\n    }\n\n    updateUserInfo(name, job) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: `${name}`,\n                about: `${job}`\n            })\n        })\n        .then(this._getResFromServer());\n    }\n\n    addNewCard(data) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: `${data.popupName}`,\n                link: `${data.popupImg}`\n            })\n        })\n        .then(this._getResFromServer());\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._url}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._getResFromServer());\n    }\n    \n    setCardLikes(id) {\n        return fetch(`${this._url}/cards/${id}/likes`, {\n            method: 'PUT',\n            headers: this._headers\n        })\n        .then(this._getResFromServer());\n    }\n\n    deleteCardLike(id) {\n        return fetch(`${this._url}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._getResFromServer());\n    }\n\n    editAvatar(avatarUrl) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: `${avatarUrl}`\n            }  \n            )\n        })\n        .then(this._getResFromServer());\n    }\n}\n\nconst api = new Api ({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-52',\n    headers: {\n        'content-type': 'application/json',\n        authorization: '88b8691a-7ac8-4b43-af84-6572693f6425'\n    }\n});\n\nexport {api};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}