{"ast":null,"code":"var _jsxFileName = \"/Users/nekoatsume/Desktop/dev/mesto-react-12/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as auth from '../auth.js';\nimport { api } from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  //Контекст данные пользователя\n  const [currentUser, setCurrentUser] = useState({\n    _id: '',\n    name: '',\n    about: '',\n    description: '',\n    avatar: ''\n  });\n\n  //Проверка на авторизацию пользователя\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  //Email\n  const [email, setEmail] = useState('');\n\n  //POPUP\n  const [isEditAvatarPopupOpen, setEditAvatarPopupState] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupState] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupState] = useState(false);\n  const [isInfoTooltipOpen, setInfoTooltipState] = useState(false);\n\n  //CARDS\n  const [cards, setCardsState] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  useEffect(() => {\n    checkToken();\n  }, []);\n\n  //Получаем данные пользователя и карточки с сервера\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n      let [userData, cardsData] = _ref;\n      setCurrentUser(userData);\n      setCardsState(cardsData);\n    }).catch(err => {\n      //попадаем сюда если один из промисов завершаться ошибкой\n      console.log(err);\n    });\n  }, []);\n\n  //Закрытие попапов на esc\n  useEffect(() => {\n    function handleEscClose(event) {\n      if (event.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  });\n\n  // Проверка токена при заходе на страницу\n  function checkToken() {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      auth.checkToken(jwt).then(data => {\n        if (data) {\n          setLoggedIn(true);\n          setEmail(data.data.email);\n          navigate(\"/places\", {\n            replace: true\n          });\n        }\n      });\n    }\n  }\n\n  // Установка статуса авторизованный пользоаптель\n  function handleLogin(status) {\n    console.log(status);\n    setLoggedIn(status);\n    console.log(loggedIn);\n  }\n  // Закрытие попапов\n  function closeAllPopups() {\n    isEditAvatarPopupOpen && setEditAvatarPopupState(false);\n    isEditProfilePopupOpen && setEditProfilePopupState(false);\n    isAddPlacePopupOpen && setAddPlacePopupState(false);\n    isInfoTooltipOpen && setInfoTooltipState(false);\n    selectedCard && setSelectedCard(null);\n  }\n\n  // Управление лайками на карточке\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    if (isLiked) {\n      api.deleteCardLike(card._id).then(newCard => {\n        setCardsState(cards => cards.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.setCardLikes(card._id).then(newCard => {\n        setCardsState(cards => cards.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  // Удаление карточки\n  function handleCardDelete(cardId) {\n    api.deleteCard(cardId).then(() => {\n      setCardsState(cards => cards.filter(card => card._id !== cardId));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  //Изменение профиля\n  function handleUpdateUser(userData) {\n    api.updateUserInfo(userData.name, userData.about).then(userInfo => {\n      setCurrentUser(userInfo);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // Изменение аватара\n  function handleUpdateAvatar(avatarLink) {\n    api.editAvatar(avatarLink.avatar).then(userAvatar => {\n      setCurrentUser(userAvatar);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  //Добавление новой карточки\n  function handleAddPlaceSubmit(cardData) {\n    api.addNewCard(cardData).then(newCard => {\n      setCardsState([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleEditAvatarClick() {\n    setEditAvatarPopupState(true);\n  }\n  function handleEditProfileClick() {\n    setEditProfilePopupState(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupState(true);\n  }\n  function handleModalWindowState() {\n    setInfoTooltipState(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page__content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          email: email,\n          handleLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/places\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 61\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/sign-in\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 97\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              name: 'modal-window',\n              isOpen: isInfoTooltipOpen,\n              onClose: closeAllPopups,\n              onSubmitDataModal: handleModalWindowState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              name: 'modal-window',\n              handleLogin: handleLogin,\n              isOpen: isInfoTooltipOpen,\n              onClose: closeAllPopups,\n              onSubmitDataModal: handleModalWindowState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/places\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: Main,\n              loggedIn: loggedIn,\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onEditAvatar: handleEditAvatarClick,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete,\n              cards: cards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), loggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddCard: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"r9Q5qERUMayQwiK2qNr2KpADmWk=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","Navigate","useNavigate","Header","Main","Register","Login","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","auth","api","CurrentUserContext","App","navigate","currentUser","setCurrentUser","_id","name","about","description","avatar","loggedIn","setLoggedIn","email","setEmail","isEditAvatarPopupOpen","setEditAvatarPopupState","isEditProfilePopupOpen","setEditProfilePopupState","isAddPlacePopupOpen","setAddPlacePopupState","isInfoTooltipOpen","setInfoTooltipState","cards","setCardsState","selectedCard","setSelectedCard","checkToken","Promise","all","getUserInfo","getInitialCards","then","userData","cardsData","catch","err","console","log","handleEscClose","event","key","closeAllPopups","document","addEventListener","removeEventListener","localStorage","getItem","jwt","data","replace","handleLogin","status","handleCardLike","card","isLiked","likes","some","i","deleteCardLike","newCard","map","c","setCardLikes","handleCardDelete","cardId","deleteCard","filter","handleUpdateUser","updateUserInfo","userInfo","handleUpdateAvatar","avatarLink","editAvatar","userAvatar","handleAddPlaceSubmit","cardData","addNewCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleModalWindowState","handleCardClick"],"sources":["/Users/nekoatsume/Desktop/dev/mesto-react-12/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Routes, Route, Navigate, useNavigate} from 'react-router-dom';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as auth from '../auth.js';\nimport { api } from '../utils/Api.js';\nimport { CurrentUserContext} from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n    const navigate = useNavigate();\n    //Контекст данные пользователя\n    const [currentUser, setCurrentUser] = useState({_id: '', name: '', about: '', description:'', avatar: ''});\n\n    //Проверка на авторизацию пользователя\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    //Email\n    const [email, setEmail] = useState('');\n\n    //POPUP\n    const [isEditAvatarPopupOpen, setEditAvatarPopupState] = useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupState] = useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupState] = useState(false);\n    const [isInfoTooltipOpen, setInfoTooltipState] = useState(false);\n\n    //CARDS\n    const [cards, setCardsState] = useState([]);\n    const [selectedCard, setSelectedCard] = useState(null);\n\n    useEffect(() => {\n        checkToken();\n    }, [])\n\n    //Получаем данные пользователя и карточки с сервера\n    useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([userData, cardsData]) => {\n                setCurrentUser(userData);\n                setCardsState(cardsData);\n            })\n            .catch((err) => { //попадаем сюда если один из промисов завершаться ошибкой\n                console.log(err);\n            })\n    }, [])\n\n    //Закрытие попапов на esc\n    useEffect(() => {\n        function handleEscClose(event) {\n            if (event.key === 'Escape') {\n                closeAllPopups();\n            }\n        }\n        document.addEventListener('keydown', handleEscClose);\n        return () => {\n            document.removeEventListener('keydown', handleEscClose);\n        }\n    });\n\n    // Проверка токена при заходе на страницу\n    function checkToken (){\n        if(localStorage.getItem('jwt')){\n            const jwt = localStorage.getItem('jwt');\n            auth.checkToken(jwt).then((data) => {\n                if(data){\n                    setLoggedIn(true);\n                    setEmail(data.data.email);\n                    navigate(\"/places\", {replace:true});\n                }\n            })\n        }\n    }\n\n    // Установка статуса авторизованный пользоаптель\n    function handleLogin(status){\n        console.log(status);\n        setLoggedIn(status);\n        console.log(loggedIn);\n    }\n    // Закрытие попапов\n    function closeAllPopups() {\n        isEditAvatarPopupOpen && setEditAvatarPopupState(false);\n        isEditProfilePopupOpen && setEditProfilePopupState(false);\n        isAddPlacePopupOpen && setAddPlacePopupState(false);\n        isInfoTooltipOpen&& setInfoTooltipState(false);\n        selectedCard && setSelectedCard(null);\n    }\n\n    // Управление лайками на карточке\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        if(isLiked) {\n            api.deleteCardLike(card._id).then((newCard) => {\n                setCardsState((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n        }\n        else {\n            api.setCardLikes(card._id).then((newCard) => {\n                setCardsState((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n        }\n    }\n\n    // Удаление карточки\n    function handleCardDelete(cardId) {\n        api.deleteCard(cardId).then(() => {\n            setCardsState((cards) => cards.filter((card) => card._id !== cardId));\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n\n    //Изменение профиля\n    function handleUpdateUser(userData) {\n        api.updateUserInfo(userData.name, userData.about).then((userInfo) => {\n            setCurrentUser(userInfo);\n            closeAllPopups();\n            \n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n\n    // Изменение аватара\n    function handleUpdateAvatar (avatarLink) {\n        api.editAvatar(avatarLink.avatar).then((userAvatar) => {\n            setCurrentUser(userAvatar);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n    //Добавление новой карточки\n    function handleAddPlaceSubmit (cardData) {\n        api.addNewCard(cardData).then((newCard) => {\n            setCardsState([newCard, ...cards]);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupState(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupState(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupState(true);\n    }\n\n    function handleModalWindowState() {\n        setInfoTooltipState(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className='page'>\n                <div className='page__content'>\n                    <Header email={email} handleLogin={handleLogin} />\n                    <Routes>\n                        <Route path=\"/\" element={loggedIn ? <Navigate to=\"/places\" replace /> : <Navigate to=\"/sign-in\" replace />} />\n                        <Route path=\"/sign-up\" element={<Register name={'modal-window'} isOpen={isInfoTooltipOpen} onClose={closeAllPopups} onSubmitDataModal={handleModalWindowState}/>} />\n                        <Route path=\"/sign-in\" element ={<Login name={'modal-window'} handleLogin={handleLogin} isOpen={isInfoTooltipOpen} onClose={closeAllPopups} onSubmitDataModal={handleModalWindowState} />} />\n                        <Route path=\"/places\" element= \n                            {<ProtectedRoute element={Main} loggedIn={loggedIn}\n                                onEditProfile={handleEditProfileClick}\n                                onAddPlace={handleAddPlaceClick}\n                                onEditAvatar={handleEditAvatarClick}\n                                onCardClick={handleCardClick}\n                                onCardLike={handleCardLike}\n                                onCardDelete={handleCardDelete}\n                                cards={cards}\n                            />} \n                        />\n                    </Routes>\n                    {loggedIn&&<Footer />}\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddCard={handleAddPlaceSubmit} />\n                    <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n                </div>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}